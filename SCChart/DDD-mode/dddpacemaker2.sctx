#resource "timing.h"
#hostcode-c "#include \"timing.h\""
#include "timing.h"
scchart DDDpacemaker {
  
   // atrial sense atrial pace, ventricular sense and pace.
  
    // the reason why its throwing all these errors is because they are both trying to access the same variable?
    //pre()//use value from previosu tick 
    
    
    
    //to debug eitehr have a mac, or use the artifical heart from the board or use NIOSII
    // or write a C test bench in order to catch certain variables from it ,(Araon has some test stuff written up)
    
    // https://rtsys.informatik.uni-kiel.de/confluence/display/KIELER/SCCharts
    
  
  
  input bool AS,VS
  input int AVI_counter
  
  output bool AP, VP
  initial state top {
    

    bool AVI_start,AVI_stop
    bool AVI_state = 0
    bool URI_state=false
    signal real_AS, real_VS 
    signal AP_out
    signal VP_out=false
    @ClockUseSD
    
    clock AVI_counter=0, URI_counter=0
    
    //let uri start first
    region AVI{
      initial state AVI_init
      if AS do AVI_state=1; AVI_counter=0 go to checkURI
      
      state checkURI
      if VS do  VP =0; VP_out = false go to AVI_init
      state waitAVI
      
      if(( AVI_counter >= `AVI_VALUE`) && (URI_state==true)) go to waitAVIExtend 
 
       // if uri is still on but counter exceeds extend

      if (( AVI_counter >= `AVI_VALUE`) && (URI_state==false)) do VP= 1; VP_out = true go to AVI_init
      //if avi counter exceeds limit but uri is 0 pulse
      
      
      state waitAVIExtend
      if VS do VP= 0; VP_out = false go to AVI_init
      if URI_state==false do VP= 1; VP_out = true go to AVI_init
   
  
      
    }
   
     region URI{
     initial state init_URI
     if VS do URI_state = true;URI_counter=0 go to wait_URI
     if pre(VP_out) do URI_state = true; URI_counter =0 go to wait_URI
    
     state wait_URI
     if URI_counter >= `URI_VALUE` do URI_state = false go to init_URI
     
     
   }
   
  }

}
